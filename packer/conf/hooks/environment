#!/bin/bash
set -eu

s3_exists() {
  env -i aws s3 ls "$1" --summarize --human-readable
}

s3_download() {
  local aws_s3_args=("--quiet")

  if [[ -n "${BUILDKITE_SECRETS_KEY:-}" ]] ; then
    aws_s3_args+=("--sse-c" "AES256" "--sse-c-key" "${BUILDKITE_SECRETS_KEY}")
  fi

  env -i aws s3 cp ${aws_s3_args[@]} "$1" /dev/stdout
}

echo '--- :house_with_garden: Setting up the environment'

eval "$(cat ~/cfn-env)"
eval "$(ssh-agent -s)"

if [[ -n "${BUILDKITE_SECRETS_BUCKET:-}" ]] ; then

  # allow env to override paths
  secrets_prefix="${BUILDKITE_SECRETS_PREFIX:-$BUILDKITE_PIPELINE_SLUG}"
  secrets_url_base="s3://${BUILDKITE_SECRETS_BUCKET}/${secrets_prefix}"
  ssh_key_url="${secrets_url_base}/${SSH_KEY_NAME:-id_rsa_github}"
  env_url="${secrets_url_base}/env"

  if ! s3_exists "$ssh_key_url" ; then
    echo "Failed to download $ssh_key_url"
    exit 1
  fi

  echo "Downloading ssh key from $ssh_key_url"
  ssh-add <(s3_download "$ssh_key_url")

  if s3_exists "$env_url" ; then
    echo "Downloading env from $env_url"
    eval "$(s3_download $env_url)"
  fi
fi

eval $(aws ecr get-login --region $(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region))

if [[ $(docker ps -q | wc -l) -gt 0 ]] ; then
  echo "~~~ Stopping existing :docker: containers"
  docker stop $(docker ps -q)
fi

unset BUILDKITE_SECRETS_BUCKET
unset BUILDKITE_SECRETS_KEY

sudo /usr/bin/fix-checkout-permissions
